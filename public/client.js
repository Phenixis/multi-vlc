// Generated by CoffeeScript 1.6.2
(function () {
    var runCmd;

    runCmd = function (cmd) {
        var instanceIds, req;

        // Get all checked checkboxes and collect their values
        instanceIds = $('input[name="vlcInstance"]:checked').map(function () {
            return $(this).val();
        }).get();

        // If no instances are selected, send empty string to control all instances
        if (instanceIds.length === 0) {
            instanceIds = [""];
        }

        req = $.get('/player/' + cmd, { instanceId: instanceIds.join(',') });
        req.success(function () {
            return
        });
        return req.error(function () {
            return console.error("could not run " + cmd);
        });
    };

    $(document).ready(function () {
        var req;
        var currentSpeed = 1.0;
        var instanceInfoElements = {};

        function updateStreamInfo() {
            var instanceIds = $('input[name="vlcInstance"]').map(function() {
                return $(this).val();
            }).get();

            // Update each instance separately
            instanceIds.forEach(function(instanceId) {
                var infoElement = instanceInfoElements[instanceId];
                if (infoElement) {
                    // infoElement.addClass('updating').text('Updating...');
                    
                    $.get('/player/info', { instanceId: instanceId })
                        .done(function(data) {
                            infoElement.removeClass('updating')
                                       .html(data.title);
                        })
                        .fail(function() {
                            infoElement.removeClass('updating')
                                       .html('Error fetching stream information')
                                       .addClass('error');
                        });
                }
            });
        }

        function updateSpeed(change) {
            currentSpeed = Math.max(0.25, Math.min(4.0, currentSpeed + change));
            $('#current-speed').text(currentSpeed.toFixed(1) + 'x');

            var instanceIds = $('input[name="vlcInstance"]:checked').map(function () {
                return $(this).val();
            }).get();

            if (instanceIds.length === 0) {
                instanceIds = [""];
            }

            $.get('/player/rate', {
                rate: currentSpeed,
                instanceId: instanceIds.join(',')
            });
        }

        $("#pause").click(function () {
            runCmd('pause');
        });
        $("#next").click(function () {
            runCmd('next');
        });
        $("#prev").click(function () {
            runCmd('prev');
        });

        $("#speed-up").click(function () {
            updateSpeed(0.25);
        });

        $("#speed-down").click(function () {
            updateSpeed(-0.25);
        });

        updateStreamInfo();
        setInterval(updateStreamInfo, 2000);

        req = $.getJSON('/clients/*');
        req.success(function (clients) {
            var container = $("#vlcInstances");
            container.empty();
            instanceInfoElements = {};

            clients.forEach(function (c, index) {
                var instanceId = c.host + ":" + c.port;
                var instanceDiv = $("<div>");
                var instanceHeader = $("<div>").addClass("instance-header");
                var checkbox = $("<input>")
                    .attr({
                        type: 'checkbox',
                        name: 'vlcInstance',
                        value: instanceId,
                        id: 'vlc_' + index
                    });
                var label = $("<label>")
                    .attr('for', 'vlc_' + index)
                    .text(c.name || instanceId);
                var infoDiv = $("<div>")
                    .addClass("stream-info")
                    .text("Loading...");

                instanceHeader.append(checkbox, label);
                instanceDiv.append(instanceHeader, infoDiv);
                container.append(instanceDiv);

                // Store the info element for updates
                instanceInfoElements[instanceId] = infoDiv;
            });
        });
    });

}).call(this);
